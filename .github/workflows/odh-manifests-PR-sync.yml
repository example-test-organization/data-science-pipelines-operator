name: odh-manifests sync

run-name: Sync manifests in odh-manifests
on:
  workflow_dispatch:
    inputs:
      src_branch:
        default: 'v1.0.x'
        description: 'Source branch to build DSPO/DSP from (for example: v1.0.x)'
        required: true
      target_tag:
        default: 'vx.y.z'
        description: 'DSPO version tag to be selected to sync manifests from (for example: v1.0.0)'
        required: true
      odh_manifest_org:
        default: 'opendatahub-io'
        description: 'The GH org for odh-manifest.'
        required: true

jobs:
  send-pull-requests:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout data-science-pipelines-operator repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ inputs.src_branch }}
          repository: opendatahub-io/data-science-pipelines-operator
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Send pull-request
        run: |
          TARGET_TAG=${{ inputs.target_tag }}
          REPOSITORY="dsp-developers/odh-manifests"
          FOLDER="bin/$REPOSITORY"
          BRANCH_NAME="chore-update-scripts-to-$TARGET_TAG"

          # Clone the remote repository and change working directory to the
          # folder it was cloned to.
          git clone \
            --depth=1 \
            --branch=master \
            https://dsp-developers:${{ secrets.ACCESS_TOKEN }}@github.com/$REPOSITORY \
            $FOLDER
          cd $FOLDER

          # Setup the committers identity.
          git config user.email "140449482+dsp-developers@users.noreply.github.com"
          git config user.name "dsp-developers"

          git remote add upstream https://github.com/{{ inputs.odh_manifest_org }}/odh-manifests.git
          git fetch upstream

          # Create a new feature branch for the changes.
          git checkout -B $BRANCH_NAME upstream/master
          echo "Created branch: $BRANCH_NAME"

          # Copy DSPO manifests. Using rsync to allow filtering of paths/files (e.g. like a .gitignore, hidden files, etc)

          rsync -av --exclude={'overlays/','samples/','internal/'} ../../../config/ data-science-pipelines-operator/

          # Commit the changes and push the feature branch to origin
          git add .
          git commit -m "Update DSPO to $TARGET_TAG"
          # Check if the branch exists and perform rebase if it does
          if git ls-remote --exit-code --heads origin $BRANCH_NAME; then
            git pull --rebase origin $BRANCH_NAME
          fi
          git push origin $BRANCH_NAME

          gh pr create \
            --body "This is an automated PR to update Data Science Pipelines Operator manifests to $TARGET_TAG" \
            --title "Update DSP Operator manifests to $TARGET_TAG" \
            --head "$BRANCH_NAME" \
            --base "master"
            --repo https://github.com/{{ inputs.odh_manifest_org }}/odh-manifests
